install.packages("tidyverse")
install.packages("ncdf4")
install.packages("AquaCropR")
install.packages(“devtools”)
install.packages("devtools")
library(devtools)
library("chirps")
lonlat <- data.frame(lon = c(-55.0281,-54.9857, -55.0714),
lat = c(-2.8094, -2.8756, -3.5279))
dates <- c("2017-01-01", "2017-12-31")
dat <- get_chirps(lonlat, dates)
install.packages(c("apsimx", "chirps", "nasapower", "ncdf4", "sf"))
library("remotes")
install_github("ropensci/chirps", build_vignettes = TRUE)
library("chirps")
install.packages("terra")
library("remotes")
install_github("ropensci/chirps", build_vignettes = TRUE)
library(tidyr)
library(dplyr)
library(reshape2)
library(ggplot2)
library(lubridate)
library(gridExtra)
setwd('C:\\SenegalGIS\\VegIndicesAnalysis\\')
sites<-read.csv('sites.csv')%>%filter(is_agriculture>0)%>%select(lon, lat, site, arc_fid)
veg_indices<-read.csv('VIs_10-days.csv')
###################################################
#READ AQUACROP RESULT FILES
setwd('C:\\SenegalGIS\\crop_model_result\\')
millet_growth<-read.csv("millet_GROWTH_multiple_PlantingDates.csv")
millet_summary<-read.csv("millet_FINAL_multiple_PlantingDates.csv")
millet_flux<-read.csv("millet_FLUX_multiple_PlantingDates.csv")
###################################################
#SUMMARIZE AQUACROP RESULT FILES
millet_growth$year<-millet_growth$SeasonCounter+1981
millet_growth<-millet_growth%>%filter(DAP>0)
millet_growth_summary<-millet_growth%>%group_by(year, site_id, soil_id, zone, planting_date)%>%summarise(biomass=max(B), yield=max(Y), harvest_DOY = max(DAP)+183 )
millet_flux$year<-millet_flux$SeasonCounter+1981
millet_flux<-millet_flux%>%filter(DAP>0)
millet_flux_summary<-millet_flux%>%group_by(year, site_id, soil_id, zone, planting_date)%>%summarise(precip=sum(P))
###############################################
#WEATHER INPUT FILES
setwd('C:\\SenegalGIS\\weather\\aquacrop_python')
nioro_weather<-read.csv('Nioro_weather_from_python.csv')
nioro_weather$zone_id<-6
nioro_weather$year<-year(nioro_weather$Date)
nioro_weather$month<-month(nioro_weather$Date)
nioro_weather$mean_temp=(nioro_weather$MinTemp+nioro_weather$MaxTemp)/2
nioro_weather_month_summary<-nioro_weather%>%filter(month %in% c(6,7,8,9))%>%group_by(month, year, zone_id)%>%summarise(precip=sum(Precipitation),av_max=mean(MaxTemp), av_min=mean(MinTemp), av_mean=mean(mean_temp) )
samyoro_weather<-read.csv('SamYoroGueye_weather_from_python.csv')
samyoro_weather$zone_id<-3
samyoro_weather$year<-year(samyoro_weather$Date)
samyoro_weather$month<-month(samyoro_weather$Date)
samyoro_weather$mean_temp=(samyoro_weather$MinTemp+samyoro_weather$MaxTemp)/2
samyoro_weather_month_summary<-samyoro_weather%>%filter(month %in% c(6,7,8,9))%>%group_by(month, year, zone_id)%>%summarise(precip=sum(Precipitation),av_max=mean(MaxTemp), av_min=mean(MinTemp), av_mean=mean(mean_temp) )
louga_weather<-read.csv('Louga_weather_from_python.csv')
louga_weather$zone_id<-0
louga_weather$year<-year(louga_weather$Date)
louga_weather$month<-month(louga_weather$Date)
louga_weather$mean_temp=(louga_weather$MinTemp+louga_weather$MaxTemp)/2
louga_weather_month_summary<-louga_weather%>%filter(month %in% c(6,7,8,9))%>%group_by(month, year, zone_id)%>%summarise(precip=sum(Precipitation),av_max=mean(MaxTemp), av_min=mean(MinTemp), av_mean=mean(mean_temp) )
month_weather_summary<-rbind(rbind(louga_weather_month_summary, nioro_weather_month_summary), samyoro_weather_month_summary)
june_summary<-month_weather_summary%>%filter(month==6)
colnames(june_summary)<-c("june"  , "year"  ,  "zone_id" ,"june_precip" , "june_av_max" , "june_av_min" , "june_av_mean")
july_summary<-month_weather_summary%>%filter(month==7)
colnames(july_summary)<-c("july"  , "year"  ,  "zone_id" ,"july_precip" , "july_av_max" , "july_av_min" , "july_av_mean")
august_summary<-month_weather_summary%>%filter(month==8)
colnames(august_summary)<-c("august"  , "year"  ,  "zone_id" ,"august_precip" , "august_av_max" , "august_av_min" , "august_av_mean")
sept_summary<-month_weather_summary%>%filter(month==9)
colnames(sept_summary)<-c("sept"  , "year"  ,  "zone_id" ,"sept_precip" , "sept_av_max" , "sept_av_min" , "sept_av_mean")
#####################################################################
setwd('C:\\SenegalGIS\\senegal_crop_model\\data')
soil<-read.csv('AEZ_samples_with_soil.csv')
soil<-soil%>%select(c('ï..ID','clay_0_5cm','clay_15_30','clay_30_60','clay_5_15c','clay_60_10','sand_0_5cm','sand_15_30','sand_30_60','sand_5_15c','sand_60_10','silt_0_5cm','silt_15_30','silt_30_60','silt_5_15c','silt_60_10','soc_0_5cm','soc_15_30c','soc_30_60c','soc_5_15cm','soc_60_100','region')
)
soil$upper_60_clay_ave<-(5*soil$clay_0_5cm+10*soil$clay_5_15c+15*soil$clay_15_30+30*soil$clay_30_60)/60
soil$upper_60_silt_ave<-(5*soil$silt_0_5cm+10*soil$silt_5_15c+15*soil$silt_15_30+30*soil$silt_30_60)/60
soil$upper_60_sand_ave<-(5*soil$sand_0_5cm+10*soil$sand_5_15c+15*soil$sand_15_30+30*soil$sand_30_60)/60
soil$upper_60_soc_ave<-(5*soil$soc_0_5cm+10*soil$soc_5_15cm+15*soil$soc_15_30c+30*soil$soc_30_60c)/60
#############################
#MERGE DATASETS
millet_factors<-merge(millet_flux_summary, millet_growth_summary, by=c('site_id', 'soil_id', 'year', 'planting_date'))
millet_factors<-merge(millet_factors, soil, by.x='soil_id', by.y = "ï..ID")
millet_factors<-millet_factors%>%select(-one_of('zone.x','zone.y', 'region'))
millet_factors<-merge(millet_factors, june_summary, by.x=c('site_id', 'year'), by.y = c('zone_id', 'year'))
millet_factors<-merge(millet_factors, july_summary, by.x=c('site_id', 'year'), by.y = c('zone_id', 'year'))
millet_factors<-merge(millet_factors, august_summary, by.x=c('site_id', 'year'), by.y = c('zone_id', 'year'))
millet_factors<-merge(millet_factors, sept_summary, by.x=c('site_id', 'year'), by.y = c('zone_id', 'year'))
library(tidyr)
library(cluster)
library(reshape2)
library(ggplot2)
library(MASS)
library(dplyr)
library(caret)
library(leaps)
library(boot)
get_thirds = function(my_vector){
thirds<-quantile(my_vector, probs=c(.333,.666))
return_vector<-vector(mode="character", length=length(my_vector))
return_vector[which(my_vector>-9999)]<-'MEDIUM'
return_vector[which(my_vector>thirds[2])]<-'HIGH'
return_vector[which(my_vector<thirds[1])]<-'LOW'
return_vector = factor(return_vector, levels = c('HIGH', 'MEDIUM', 'LOW'))
return(return_vector)
}
get_precip_cat<-function(my_vector){
return_vector<-vector(mode="character", length=length(my_vector))
return_vector[which(my_vector>400)]<-'>400mm'
return_vector[which(my_vector>=200 & my_vector<=400)]<-'200-400mm'
return_vector[which(my_vector<200)]<-'<200mm'
return_vector = factor(return_vector, levels = c('>400mm', '200-400mm', '<200mm'))
return(return_vector)
}
###########GET MILLET FACTORS FROMN PLOT-VIs.R################
#############################################
##### make pairwise plots of
######soil and rain by site
millet_factors$sand_level<-get_thirds(millet_factors$upper_60_sand_ave)
millet_factors$soc_level<-get_thirds(millet_factors$upper_60_soc_ave)
millet_factors$clay_level<-get_thirds(millet_factors$upper_60_clay_ave)
millet_factors$precip_level<-get_precip_cat(millet_factors$precip)
millet_factors$site_id<-factor(millet_factors$site_id, levels = c(0,6,3), labels = c('Drier/North', 'Middle', 'Humid/South'))
millet_factors$Rain200='HIGH_RAIN_NORTH'
millet_factors$Rain200[which(millet_factors$precip<200)]='LOW_RAIN_NORTH'
millet_factors$Rain400='HIGH_RAIN_MIDSOUTH'
millet_factors$Rain400[which(millet_factors$precip<400)]='LOW_RAIN_MIDSOUTH'
millet_factors$Clay200='HIGH_CLAY'
millet_factors$Clay200[which(millet_factors$upper_60_clay_ave<200)]='LOW_CLAY'
millet_factors$Planting='NONE'
millet_factors$Planting[which(millet_factors$planting_date=='8/16')]='LATE'
millet_factors$Planting[which(millet_factors$planting_date=='7/16')]='EARLY'
millet_factors$Planting[which(millet_factors$planting_date=='8/1')]='MID'
millet_factors$Louga_mode<-paste(millet_factors$Rain200, millet_factors$Clay200, millet_factors$Planting, sep=':')
millet_factors$mode<-paste(millet_factors$Rain400, millet_factors$Clay200, millet_factors$Planting, sep=':')
mill_fact_summ<-millet_factors%>%group_by(upper_60_clay_ave, site_id, precip_level)%>%summarise(yield=mean(yield))
ggplot(mill_fact_summ, aes(x = upper_60_clay_ave, y = yield)) +
geom_point(size = 1) +
theme_minimal()+ facet_grid(site_id ~ precip_level)
mill_fact_summ<-millet_factors%>%group_by(precip, site_id, sand_level)%>%summarise(yield=sd(yield))
ggplot(mill_fact_summ, aes(x = precip, y = yield)) +
geom_point(size = 1) +
theme_minimal()+ facet_grid(site_id ~ sand_level)
ggplot(millet_factors, aes(x = precip, y = yield)) +
geom_point(aes(color = as.factor(soc_level)), size = 1) +
scale_color_manual(values = c("red", "orange", "yellow")) +
theme_minimal()
ggplot(millet_factors, aes(x = precip, y = yield)) +
geom_point(aes(color = as.factor(clay_level)), size = 1) +
scale_color_manual(values = c("red", "orange", "yellow")) +
theme_minimal()
louga_factors<-millet_factors%>%filter(site_id=='Drier/North')%>%dplyr::select(site_id ,biomass, yield,precip,upper_60_clay_ave, upper_60_sand_ave,upper_60_soc_ave, sand_level, clay_level, soc_level, planting_date)
louga_factors$sand_level<-get_thirds(louga_factors$upper_60_sand_ave)
louga_factors$soc_level<-get_thirds(louga_factors$upper_60_soc_ave)
louga_factors$clay_level<-get_thirds(louga_factors$upper_60_clay_ave)
louga_factors$precip_level<-get_precip_cat(louga_factors$precip)
#fill empty vector with means
louga_early_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='HIGH_CLAY')
louga_early_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='LOW_CLAY')
louga_mid_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='HIGH_CLAY')
louga_mid_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='LOW_CLAY')
louga_late_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='HIGH_CLAY')
louga_late_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='LOW_CLAY')
sample_means <- data.frame(matrix(ncol = 2, nrow = 6000))
#provide column names
colnames(sample_means) <- c('yield', 'condition')
j=1
for(i in 1:n){
for( x in list(louga_early_high_clay, louga_early_low_clay, louga_mid_high_clay, louga_mid_low_clay, louga_late_high_clay, louga_late_low_clay )){
sample_means$yield[j] = mean(sample(x$biomass, 20, replace = FALSE, prob = NULL))
sample_means$condition[j] = x$clay_planting[1]
j=j+1
}
}
n<-1000
#fill empty vector with means
louga_early_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='HIGH_CLAY')
louga_early_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='LOW_CLAY')
louga_mid_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='HIGH_CLAY')
louga_mid_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='LOW_CLAY')
louga_late_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='HIGH_CLAY')
louga_late_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='LOW_CLAY')
sample_means <- data.frame(matrix(ncol = 2, nrow = 6000))
#provide column names
colnames(sample_means) <- c('yield', 'condition')
j=1
for(i in 1:n){
for( x in list(louga_early_high_clay, louga_early_low_clay, louga_mid_high_clay, louga_mid_low_clay, louga_late_high_clay, louga_late_low_clay )){
sample_means$yield[j] = mean(sample(x$biomass, 20, replace = FALSE, prob = NULL))
sample_means$condition[j] = x$clay_planting[1]
j=j+1
}
}
millet_factors$clay_planting<-''
millet_factors$clay_planting<-paste(millet_factors$Clay200, millet_factors$Planting, sep=':')
n<-1000
#fill empty vector with means
louga_early_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='HIGH_CLAY')
louga_early_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='LOW_CLAY')
louga_mid_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='HIGH_CLAY')
louga_mid_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='LOW_CLAY')
louga_late_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='HIGH_CLAY')
louga_late_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='LOW_CLAY')
sample_means <- data.frame(matrix(ncol = 2, nrow = 6000))
#provide column names
colnames(sample_means) <- c('yield', 'condition')
j=1
for(i in 1:n){
for( x in list(louga_early_high_clay, louga_early_low_clay, louga_mid_high_clay, louga_mid_low_clay, louga_late_high_clay, louga_late_low_clay )){
sample_means$yield[j] = mean(sample(x$biomass, 20, replace = FALSE, prob = NULL))
sample_means$condition[j] = x$clay_planting[1]
j=j+1
}
}
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<600)])/length(sample_means$yield)
aggregate_risk
length(sample_means$yield)
length(sample_means$yield[which(sample_means$yield<600)])
set.seed(3135)
n<-1000
#fill empty vector with means
louga_early_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='HIGH_CLAY')
louga_early_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='EARLY' & Clay200=='LOW_CLAY')
louga_mid_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='HIGH_CLAY')
louga_mid_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='MID' & Clay200=='LOW_CLAY')
louga_late_high_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='HIGH_CLAY')
louga_late_low_clay<-millet_factors%>%filter(site_id=='Drier/North' & Planting=='LATE' & Clay200=='LOW_CLAY')
sample_means <- data.frame(matrix(ncol = 2, nrow = 6000))
#provide column names
colnames(sample_means) <- c('yield', 'condition')
j=1
for(i in 1:n){
for( x in list(louga_early_high_clay, louga_early_low_clay, louga_mid_high_clay, louga_mid_low_clay, louga_late_high_clay, louga_late_low_clay )){
sample_means$yield[j] = mean(sample(x$biomass, 20, replace = FALSE, prob = NULL))
sample_means$condition[j] = x$clay_planting[1]
j=j+1
}
}
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<600)])/length(sample_means$yield)
aggregate_risk
set.seed(3131)
sample_means <- data.frame(matrix(ncol = 2, nrow = 6000))
#provide column names
colnames(sample_means) <- c('yield', 'condition')
j=1
for(i in 1:n){
for( x in list(louga_early_high_clay, louga_early_low_clay, louga_mid_high_clay, louga_mid_low_clay, louga_late_high_clay, louga_late_low_clay )){
sample_means$yield[j] = mean(sample(x$biomass, 20, replace = FALSE, prob = NULL))
sample_means$condition[j] = x$clay_planting[1]
j=j+1
}
}
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<600)])/length(sample_means$yield)
high_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY')])
low_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY')])
high_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY')])
low_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY')])
high_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY')])
low_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY')])
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<600)])/length(sample_means$yield)
high_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:EARLY')])
low_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:EARLY')])
high_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:MID')])
low_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:MID')])
high_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:LATE')])
low_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:LATE')])
#fill empty vector with means
nioro_early_high_clay<-millet_factors%>%filter(site_id=='Middle' & Planting=='EARLY' & Clay200=='HIGH_CLAY')
nioro_early_low_clay<-millet_factors%>%filter(site_id=='Middle' & Planting=='EARLY' & Clay200=='LOW_CLAY')
nioro_mid_high_clay<-millet_factors%>%filter(site_id=='Middle' & Planting=='MID' & Clay200=='HIGH_CLAY')
nioro_mid_low_clay<-millet_factors%>%filter(site_id=='Middle' & Planting=='MID' & Clay200=='LOW_CLAY')
nioro_late_high_clay<-millet_factors%>%filter(site_id=='Middle' & Planting=='LATE' & Clay200=='HIGH_CLAY')
nioro_late_low_clay<-millet_factors%>%filter(site_id=='Middle' & Planting=='LATE' & Clay200=='LOW_CLAY')
sample_means <- data.frame(matrix(ncol = 2, nrow = 6000))
#provide column names
colnames(sample_means) <- c('yield', 'condition')
j=1
for(i in 1:n){
for( x in list(nioro_early_high_clay, nioro_early_low_clay, nioro_mid_high_clay, nioro_mid_low_clay, nioro_late_high_clay, nioro_late_low_clay )){
sample_means$yield[j] = mean(sample(x$biomass, 20, replace = FALSE, prob = NULL))
sample_means$condition[j] = x$clay_planting[1]
j=j+1
}
}
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<600)])/length(sample_means$yield)
high_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:EARLY')])
low_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:EARLY')])
high_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:MID')])
low_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:MID')])
high_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='HIGH_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:LATE')])
low_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<600 & sample_means$condition=='LOW_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:LATE')])
nioro_early_high_clay
View(sample_means)
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<1400)])/length(sample_means$yield)
high_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='HIGH_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:EARLY')])
low_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='LOW_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:EARLY')])
high_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='HIGH_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:MID')])
low_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='LOW_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:MID')])
high_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='HIGH_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:LATE')])
low_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='LOW_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:LATE')])
#fill empty vector with means
samyo_early_high_clay<-millet_factors%>%filter(site_id=='Humid/South' & Planting=='EARLY' & Clay200=='HIGH_CLAY')
samyo_early_low_clay<-millet_factors%>%filter(site_id=='Humid/South' & Planting=='EARLY' & Clay200=='LOW_CLAY')
samyo_mid_high_clay<-millet_factors%>%filter(site_id=='Humid/South' & Planting=='MID' & Clay200=='HIGH_CLAY')
samyo_mid_low_clay<-millet_factors%>%filter(site_id=='Humid/South' & Planting=='MID' & Clay200=='LOW_CLAY')
samyo_late_high_clay<-millet_factors%>%filter(site_id=='Humid/South' & Planting=='LATE' & Clay200=='HIGH_CLAY')
samyo_late_low_clay<-millet_factors%>%filter(site_id=='Humid/South' & Planting=='LATE' & Clay200=='LOW_CLAY')
sample_means <- data.frame(matrix(ncol = 2, nrow = 3000))
#provide column names
colnames(sample_means) <- c('yield', 'condition')
j=1
for(i in 1:n){
for( x in list(samyo_early_high_clay, samyo_mid_high_clay, samyo_late_high_clay )){
sample_means$yield[j] = mean(sample(x$biomass, 20, replace = FALSE, prob = NULL))
sample_means$condition[j] = x$clay_planting[1]
j=j+1
}
}
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<1400)])/length(sample_means$yield)
high_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='HIGH_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:EARLY')])
low_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='LOW_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:EARLY')])
high_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='HIGH_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:MID')])
low_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='LOW_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:MID')])
high_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='HIGH_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:LATE')])
low_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<1400 & sample_means$condition=='LOW_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:LATE')])
View(sample_means)
length(sample_means$yield[which(sample_means$yield<1400)])
aggregate_risk = 100*length(sample_means$yield[which(sample_means$yield<1500)])/length(sample_means$yield)
high_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<1500 & sample_means$condition=='HIGH_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:EARLY')])
low_clay_risk_early = 100*length(sample_means$yield[which(sample_means$yield<1500 & sample_means$condition=='LOW_CLAY:EARLY')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:EARLY')])
high_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<1500 & sample_means$condition=='HIGH_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:MID')])
low_clay_risk_mid = 100*length(sample_means$yield[which(sample_means$yield<1500 & sample_means$condition=='LOW_CLAY:MID')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:MID')])
high_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<1500 & sample_means$condition=='HIGH_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='HIGH_CLAY:LATE')])
low_clay_risk_late = 100*length(sample_means$yield[which(sample_means$yield<1500 & sample_means$condition=='LOW_CLAY:LATE')])/length(sample_means$yield[which(sample_means$condition=='LOW_CLAY:LATE')])
